// <auto-generated />
using System;
using LoanNet;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace LoanNet.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220220184009_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("LoanNet.Models.Cliente", b =>
                {
                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)")
                        .HasMaxLength(8);

                    b.Property<string>("cApellidos")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cCorreo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cDireccion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cFoto")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cNombres")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cTelefono")
                        .HasColumnType("NVARCHAR2(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nIdUsu")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cDni");

                    b.HasIndex("nIdUsu");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("LoanNet.Models.Documento", b =>
                {
                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)");

                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<bool>("bEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("cNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cDni", "cRuc");

                    b.HasIndex("cRuc");

                    b.ToTable("documento");
                });

            modelBuilder.Entity("LoanNet.Models.Empleado", b =>
                {
                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)")
                        .HasMaxLength(8);

                    b.Property<bool>("bEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("cApellidos")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cFoto")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<string>("cTelefono")
                        .HasColumnType("NVARCHAR2(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nIdUsu")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cDni");

                    b.HasIndex("cRuc");

                    b.HasIndex("nIdUsu");

                    b.ToTable("empleado");
                });

            modelBuilder.Entity("LoanNet.Models.Empresa", b =>
                {
                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)")
                        .HasMaxLength(11);

                    b.Property<string>("cFoto")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cRazonSocial")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cTelefono")
                        .HasColumnType("NVARCHAR2(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nIdUsu")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cRuc");

                    b.HasIndex("nIdUsu");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("LoanNet.Models.ListaNegra", b =>
                {
                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)");

                    b.Property<string>("cRazon")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cRuc", "cDni");

                    b.HasIndex("cDni");

                    b.ToTable("lista_negra");
                });

            modelBuilder.Entity("LoanNet.Models.Pago", b =>
                {
                    b.Property<int>("nId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("bEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime>("dtFecha")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nIdPrestamo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("nMonto")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("nId");

                    b.HasIndex("nIdPrestamo");

                    b.ToTable("pago");
                });

            modelBuilder.Entity("LoanNet.Models.Prestamo", b =>
                {
                    b.Property<int>("nId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)");

                    b.Property<bool>("cEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("dtFechaFin")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("dtFechaIni")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nIdTipoPrestamo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("nMonto")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("nId");

                    b.HasIndex("cDni");

                    b.HasIndex("nIdTipoPrestamo");

                    b.ToTable("prestamo");
                });

            modelBuilder.Entity("LoanNet.Models.Recomendado", b =>
                {
                    b.Property<string>("cDniRec")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("cDni")
                        .HasColumnType("NVARCHAR2(8)");

                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<bool>("bEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("clientecDni")
                        .HasColumnType("NVARCHAR2(8)");

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("cDniRec", "cDni", "cRuc");

                    b.HasIndex("cDni");

                    b.HasIndex("cRuc");

                    b.HasIndex("clientecDni");

                    b.ToTable("recomendado");
                });

            modelBuilder.Entity("LoanNet.Models.TipoPrestamo", b =>
                {
                    b.Property<int>("nId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("bEstado")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("cNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cRuc")
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<DateTime>("dtFechaReg")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("nPorcentaje")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("nId");

                    b.HasIndex("cRuc");

                    b.ToTable("tipo_prestamo");
                });

            modelBuilder.Entity("LoanNet.Models.Usuario", b =>
                {
                    b.Property<int>("nId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cContrasena")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cTipoUsuario")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("cUsuario")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("nId");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("LoanNet.Models.Cliente", b =>
                {
                    b.HasOne("LoanNet.Models.Usuario", "usuario")
                        .WithMany("clientes")
                        .HasForeignKey("nIdUsu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Documento", b =>
                {
                    b.HasOne("LoanNet.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("cDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanNet.Models.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("cRuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Empleado", b =>
                {
                    b.HasOne("LoanNet.Models.Empresa", "empresa")
                        .WithMany("empleados")
                        .HasForeignKey("cRuc")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LoanNet.Models.Usuario", "usuario")
                        .WithMany("empleados")
                        .HasForeignKey("nIdUsu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Empresa", b =>
                {
                    b.HasOne("LoanNet.Models.Usuario", "usuario")
                        .WithMany("empresas")
                        .HasForeignKey("nIdUsu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.ListaNegra", b =>
                {
                    b.HasOne("LoanNet.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("cDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanNet.Models.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("cRuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Pago", b =>
                {
                    b.HasOne("LoanNet.Models.Prestamo", "prestamo")
                        .WithMany("pagos")
                        .HasForeignKey("nIdPrestamo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Prestamo", b =>
                {
                    b.HasOne("LoanNet.Models.Cliente", "cliente")
                        .WithMany("prestamos")
                        .HasForeignKey("cDni")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LoanNet.Models.TipoPrestamo", "tipoPrestamo")
                        .WithMany("prestamos")
                        .HasForeignKey("nIdTipoPrestamo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanNet.Models.Recomendado", b =>
                {
                    b.HasOne("LoanNet.Models.Cliente", "clienteRec")
                        .WithMany()
                        .HasForeignKey("cDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanNet.Models.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("cRuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanNet.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clientecDni");
                });

            modelBuilder.Entity("LoanNet.Models.TipoPrestamo", b =>
                {
                    b.HasOne("LoanNet.Models.Empresa", "empresa")
                        .WithMany("tiposPrestamos")
                        .HasForeignKey("cRuc")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
